#+OPTIONS: ^:{}
#+STARTUP: indent nolineimages overview num
#+TITLE: LLM by Rashka
#+AUTHOR: Shigeto R. Nishitani
#+EMAIL:     (concat "shigeto_nishitani@mac.com")
#+LANGUAGE:  jp
#+OPTIONS:   H:4 toc:t num:2
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup

* Rashka25_llm github
- git@github.com:rasbt/LLMs-from-scratch.git

* ollama
- installed from https:.//ollama.com
- ollama run llama3
  - \bye
* c07
** 7.5 Loading a pretrained LLM
あたりから，結果が変わっていた．
ただし，rasbtのoriginal dirで実行するとテキスト通り，
なんか，違う関数をimportしているのかも．
何度，tuningを繰り返しても途中でnullが出てくる．

File already exists and is up-to-date: gpt2/355M/checkpoint
File already exists and is up-to-date: gpt2/355M/encoder.json
File already exists and is up-to-date: gpt2/355M/hparams.json
model.ckpt.data-00000-of-00001: 100%|██████████| 1.42G/1.42G [03:07<00:00, 7.57MiB/s] 
model.ckpt.index: 100%|██████████| 10.4k/10.4k [00:00<00:00, 7.11MiB/s]
model.ckpt.meta: 100%|██████████| 927k/927k [00:01<00:00, 908kiB/s] 
vocab.bpe: 100%|██████████| 456k/456k [00:00<00:00, 623kiB/s] 
Below is an instruction that describes a task. Write a response that appropriately completes the request.

### Instruction:
Convert the active sentence to passive: 'The chef cooks the meal every day.'
The chef cooks the meal every day.

### Instruction:

Convert the active sentence to passive: 'The chef cooks the
Training loss: 3.825879430770874
Validation loss: 3.761904001235962

今は，cpuでやっている．
前のおかしいのは，mpsだった．
これは試す価値あり．training遅いけど．
もし，ここにおかしい点があるなら，issueを立ててやろう．

#+begin_src bash
Ep 1 (Step 000105): Train loss 0.564, Val loss 0.670
Ep 1 (Step 000110): Train loss 0.555, Val loss 0.667
Ep 1 (Step 000115): Train loss 0.508, Val loss 0.664
Below is an instruction that describes a task. Write a response that appropriately completes the request.  ### Instruction: Convert the active sentence to passive: 'The chef cooks the meal every day.'  ### Response: The meal is prepared every day by the chef.<|endoftext|>The following is an instruction that describes a task. Write a response that appropriately completes the request.  ### Instruction: Convert the active sentence to passive:
...
Ep 2 (Step 000225): Train loss 0.346, Val loss 0.661
Ep 2 (Step 000230): Train loss 0.293, Val loss 0.658
Below is an instruction that describes a task. Write a response that appropriately completes the request.  ### Instruction: Convert the active sentence to passive: 'The chef cooks the meal every day.'  ### Response: The meal is cooked every day by the chef.<|endoftext|>The following is an instruction that describes a task. Write a response that appropriately completes the request.  ### Instruction: What is the capital of the United Kingdom
Training completed in 14.16 minutes.
#+end_src
* code .での実行
`code .` で入ると，毎回sourceをしないといけない
#=> 1.で解決．3.はダメみたい．

仮想環境の有効化（source myenv/bin/activate など）は、新しいターミナルごとに必要です。
これはPythonの仕様で、VS Codeやターミナルを再起動すると仮想環境が自動で有効化されないためです。

省略する方法
1. VS CodeのPython拡張機能を使う（推奨）
VS Codeで仮想環境を選択（Cmd+Shift+P → Python: Select Interpreter → myenv を選択）
これでVS Codeのターミナルを開くと、自動で仮想環境が有効化されます
2. fishシェルの場合、config.fishに自動有効化を追加
~/.config/fish/config.fish に以下を追加（プロジェクトディレクトリに入ったときだけ有効化したい場合は工夫が必要です）:

3. direnvを使う（どのシェルでもOK）
brew install direnv
プロジェクトディレクトリに .envrc ファイルを作成し、以下を記述:
初回のみ direnv allow を実行
これで、そのディレクトリに入るだけで仮想環境が自動で有効化されます。

* 環境構築
- import tiktoken
- python3 c2_3_byte_pair_encoding.py
Traceback (most recent call last):
  File "/Users/bob/Rashka25_llm/c2_3_byte_pair_encoding.py", line 2, in <module>
    import tiktoken
ModuleNotFoundError: No module named 'tiktoken'
で失敗．仮想環境を作ってinstall, 実行．

** fishでは
- # 任意のディレクトリで
- python3 -m venv myenv
- source myenv/bin/activate.fish
- pip install tiktoken
- python3 c2_3_byte_pair_encodin
g.py 
tiktoken version: 0.11.0
